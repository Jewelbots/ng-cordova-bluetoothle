// ng-cordova-bluetoothle - v1.0.0 (2015-12-30)
// http://jewelbots.com
angular.module("ngCordovaBluetoothLE",[]).factory("$cordovaBluetoothLE",["$q",function(a){var b={error:"unsupported",message:"This function is not supported"},c=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.initialize(function(a){d.notify(a)},function(a){d.reject(a)},c),d.promise},d=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.enable(null,function(a){c.reject(a)}),c.promise},e=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.disable(null,function(a){c.reject(a)}),c.promise},f=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.startScan(function(a){d.notify(a)},function(a){d.reject(a)},c),d.promise},g=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.stopScan(function(a){c.resolve(a)},function(a){c.reject(a)}),c.promise},h=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.retrieveConnected(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},i=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.connect(function(a){d.notify(a)},function(a){d.reject(a)},c),d.promise},j=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.reconnect(function(a){d.notify(a)},function(a){d.reject(a)},c),d.promise},k=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.disconnect(function(a){d.notify(a)},function(a){d.reject(a)},c),d.promise},l=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.close(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},m=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.discover(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},n=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.services(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},o=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.characteristics(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},p=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.descriptors(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},q=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.read(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},r=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.subscribe(function(a){d.notify(a)},function(a){d.reject(a)},c),d.promise},s=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.unsubscribe(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},t=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.write(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},u=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.readDescriptor(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},v=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.writeDescriptor(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},w=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.rssi(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},x=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.mtu(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},y=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.isInitialized(function(a){c.resolve(a)}),c.promise},z=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.isEnabled(function(a){c.resolve(a)}),c.promise},A=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.isScanning(function(a){c.resolve(a)}),c.promise},B=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.hasPermission(function(a){c.resolve(a)}),c.promise},C=function(){var c=a.defer();return void 0===window.bluetoothle?c.reject(b):window.bluetoothle.requestPermission(function(a){c.resolve(a)}),c.promise},D=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.isConnected(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},E=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.isDiscovered(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},F=function(c){var d=a.defer();return void 0===window.bluetoothle?d.reject(b):window.bluetoothle.requestConnectionPriority(function(a){d.resolve(a)},function(a){d.reject(a)},c),d.promise},G=function(a){return void 0!==window.bluetoothle?window.bluetoothle.encodedStringToBytes(a):void 0},H=function(a){return void 0!==window.bluetoothle?window.bluetoothle.bytesToEncodedString(a):void 0},I=function(a){return void 0!==window.bluetoothle?window.bluetoothle.stringToBytes(a):void 0},J=function(a){return void 0!==window.bluetoothle?window.bluetoothle.bytesToString(a):void 0};return{initialize:c,enable:d,disable:e,startScan:f,stopScan:g,retrieveConnected:h,connect:i,reconnect:j,disconnect:k,close:l,discover:m,services:n,characteristics:o,descriptors:p,read:q,subscribe:r,unsubscribe:s,write:t,readDescriptor:u,writeDescriptor:v,rssi:w,mtu:x,isInitialized:y,isEnabled:z,isScanning:A,hasPermission:B,requestPermission:C,isConnected:D,isDiscovered:E,requestConnectionPriority:F,encodedStringToBytes:G,bytesToEncodedString:H,stringToBytes:I,bytesToString:J}}]);